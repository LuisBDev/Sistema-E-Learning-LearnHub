{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"C:/Users/Developer/Desktop/testProject/learnhub/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Developer\\\\Desktop\\\\testProject\\\\learnhub\\\\client\\\\context\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useReducer, createContext, useEffect } from 'react'; //estado inicial\n\nvar initialState = {\n  user: null\n}; //crear contexto\n\nvar Context = /*#__PURE__*/createContext();\n\nvar rootReducer = function rootReducer(state, action) {\n  switch (action.type) {\n    case 'LOGIN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: action.payload\n      });\n\n    case 'LOGOUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: null\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar Provider = function Provider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useReducer = useReducer(rootReducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      state: state,\n      dispatch: dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Provider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = Provider;\nexport { Context, Provider };\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"sources":["C:/Users/Developer/Desktop/testProject/learnhub/client/context/index.js"],"names":["useReducer","createContext","useEffect","initialState","user","Context","rootReducer","state","action","type","payload","Provider","children","dispatch"],"mappings":";;;;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,aAArB,EAAoCC,SAApC,QAAoD,OAApD,C,CAEA;;AACA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AADW,CAArB,C,CAIA;;AACA,IAAMC,OAAO,gBAAGJ,aAAa,EAA7B;;AAEA,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,OAAL;AACI,6CACOF,KADP;AAEIH,QAAAA,IAAI,EAAEI,MAAM,CAACE;AAFjB;;AAIJ,SAAK,QAAL;AACI,6CACOH,KADP;AAEIH,QAAAA,IAAI,EAAE;AAFV;;AAIJ;AACI,aAAOG,KAAP;AAZR;AAcH,CAfD;;AAiBA,IAAMI,QAAQ,GAAG,SAAXA,QAAW,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,oBACLZ,UAAU,CAACM,WAAD,EAAcH,YAAd,CADL;AAAA,MACxBI,KADwB;AAAA,MACjBM,QADiB;;AAE/B,sBACI,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAACN,MAAAA,KAAK,EAALA,KAAD;AAAQM,MAAAA,QAAQ,EAARA;AAAR,KAAzB;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CAPD;;GAAMD,Q;;KAAAA,Q;AASN,SAASN,OAAT,EAAkBM,QAAlB","sourcesContent":["import { useReducer, createContext, useEffect} from 'react';\r\n\r\n//estado inicial\r\nconst initialState = {\r\n    user: null,\r\n};\r\n\r\n//crear contexto\r\nconst Context = createContext();\r\n\r\nconst rootReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n            };\r\n        case 'LOGOUT':\r\n            return {\r\n                ...state,\r\n                user: null,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst Provider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(rootReducer, initialState);\r\n    return (\r\n        <Context.Provider value={{state, dispatch}}>\r\n            {children}\r\n        </Context.Provider>\r\n    );\r\n};\r\n\r\nexport { Context, Provider };"]},"metadata":{},"sourceType":"module"}